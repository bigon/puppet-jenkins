#!/bin/sh
### BEGIN INIT INFO
# Provides:          jenkins-slave
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Start jenkins-slave at boot time
# Description:       Controls the Jenkins Slave Swarm Client
### END INIT INFO


# Check for missing binaries (stale symlinks should not happen)
# Note: Special treatment of stop for LSB conformance
test -x $JAVA || { echo "$JAVA not installed";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }

# Check for existence of needed config file and read it
JENKINS_SLAVE_CONFIG=/etc/sysconfig/jenkins-slave
test -r $JENKINS_SLAVE_CONFIG || { echo "$JENKINS_SLAVE_CONFIG not existing";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 6; fi; }

# Read config
. $JENKINS_SLAVE_CONFIG

STARTCMD="$JAVA $JAVA_ARGS -jar $JENKINS_SLAVE_JAR $JENKINS_SLAVE_ARGS"
# Source LSB init functions
# providing start_daemon, killproc, pidofproc,
# log_success_msg, log_failure_msg and log_warning_msg.
# This is currently not used by UnitedLinux based distributions and
# not needed for init scripts for UnitedLinux only. If it is used,
# the functions from rc.status should not be sourced or used.
#. /lib/lsb/init-functions

# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     be verbose in local rc status and clear it afterwards
#      rc_status -v -r  ditto and clear both the local and overall rc status
#      rc_status -s     display "skipped" and exit with status 3
#      rc_status -u     display "unused" and exit with status 3
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num>
#      rc_reset         clear both the local and overall rc status
#      rc_exit          exit appropriate to overall rc status
#      rc_active        checks whether a service is activated by symlinks
. /etc/rc.status

# Reset status of this service
rc_reset

get_pid()
{
	PID=$(pgrep -u $JENKINS_SLAVE_USER -f "java .*swarm-client.*${JENKINS_SLAVE_HOME}.*")
}

case "$1" in
    start)
	echo -n "Starting jenkins-slave "

	# Exit if not supposed to run standalone
	[ "$RUN_STANDALONE" = "false" ] && echo "Not configured to run standalone" && exit 0

	mkdir `dirname $PIDFILE` > /dev/null 2>&1 || true
	chown $JENKINS_SLAVE_USER `dirname $PIDFILE`

	mkdir -p `dirname $JENKINS_SLAVE_LOG` > /dev/null 2>&1 || true
	chown $JENKINS_SLAVE_USER -R `dirname $JENKINS_SLAVE_LOG`

	if [ -n "$MAXOPENFILES" ]; then
		ulimit -n $MAXOPENFILES
	fi

	/sbin/startproc -u $JENKINS_SLAVE_USER -p $PIDFILE -l $JENKINS_SLAVE_LOG $STARTCMD
	rc_status -v

	get_pid
	if [ -n "$PID" ]; then
		echo $PID> $PIDFILE
	fi
	;;
    stop)
	echo -n "Shutting down jenkins-slave "
	## Stop daemon with killproc(8) and if this fails
	## killproc sets the return value according to LSB.

	/sbin/killproc -TERM -p $PIDFILE $JAVA

	# Remember status and be verbose
	rc_status -v
	;;
    try-restart|condrestart)
	## Do a restart only if the service was active before.
	## Note: try-restart is now part of LSB (as of 1.9).
	## RH has a similar command named condrestart.
	if test "$1" = "condrestart"; then
		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
	fi
	$0 status
	if test $? = 0; then
		$0 restart
	else
		rc_reset	# Not running is not a failure.
	fi
	# Remember status and be quiet
	rc_status
	;;
    restart|force-reload)
	$0 stop
	$0 start

	rc_status
	;;
    status)
	echo -n "Checking for service jenkins-slave "
	/sbin/checkproc -p $PIDFILE $JAVA
	rc_status -v
	;;
    *)
	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
	exit 1
	;;
esac
rc_exit
